services:
  teslamate:
    image: teslamate/teslamate:latest
    restart: always
    environment:
      - ENCRYPTION_KEY=${SECRETKEY} #replace with a secure key to encrypt your Tesla API tokens
      - DATABASE_USER=teslamate
      - DATABASE_PASS=${DBPASS} 
      - DATABASE_NAME=teslamate
      - DATABASE_HOST=database
      - MQTT_HOST=$(MQTT_HOST)
      - MQTT_USERNAME=$(MQTT_USERNAME)
      - MQTT_PASSWORD=$(MQTT_PASSWORD)
    ports:
      - 4000:4000
    volumes:
      - ./import:/opt/app/import
    cap_drop:
      - all

  database:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=teslamate
      - POSTGRES_PASSWORD=${DBPASS}
      - POSTGRES_DB=teslamate
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - teslamate_teslamate-db:/var/lib/postgresql/data

  grafana:
    image: teslamate/grafana:latest
    restart: always
    environment:
      - DATABASE_USER=teslamate
      - DATABASE_PASS=${DBPASS}
      - DATABASE_NAME=teslamate
      - DATABASE_HOST=database
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - 3000:3000
    volumes:
      - teslamate-grafana-data:/var/lib/grafana

volumes:
  teslamate_teslamate-db:
      external: false
  teslamate-grafana-data:
      driver_opts:
          type: none
          o: bind
          device: /home/smurmann/docker_apps/teslamate/grafana